version: '3.2'

services:
  # clickhouse-server:
  #   image: yandex/clickhouse-server
  #   networks:
  #     - elk
  #   ports:
  #     - "8123:8123"
  #     - "9000:9000"
  #     - "9004:9004"
  #   expose:
  #     - 9009
  #   volumes:
  #       - ./Shanghai:/etc/localtime ## 挂载位置（kafka镜像和宿主机器之间时间保持一直）
  #       - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml
  zookeeper:
    image: wurstmeister/zookeeper   ## 镜像
    ports:
      - "2181:2181"                 ## 对外暴露的端口号
    networks:
      - elk
  kafka:
    image: wurstmeister/kafka       ## 镜像
    volumes:
        - ./Shanghai:/etc/localtime ## 挂载位置（kafka镜像和宿主机器之间时间保持一直）
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.32.64  ## 修改:宿主机IP
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181       ## 卡夫卡运行是基于zookeeper的
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_HOURS: 120
      KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10000000
      KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS: 60000
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DELETE_RETENTION_MS: 1000
    depends_on:
      - zookeeper
    networks:
      - elk
  # kafka-manager:
  #   image: slpcat/kafka-manager                ## 镜像：开源的web管理kafka集群的界面
  #   environment:
  #     ZK_HOSTS: zookeeper:2181                 ## 修改:宿主机IP
  #     KAFKA_BROKERS: kafka:9092
  #     APPLICATION_SECRET: letmein
  #     KM_ARGS: -Djava.net.preferIPv4Stack=true
  #   ports:
  #     - "9001:9000"    ## 暴露端口
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   networks:
  #     - elk
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: bind
        source: ./Shanghai
        target: /etc/localtime
        read_only: true
      # - type: volume
      #   source: elasticsearch
      #   target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    deploy:
      resources:
         limits:
            # cpus: "2.00"
            memory: 1G
         # reservations:
         #    memory: 200M
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/7.15/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  filebeat:
      image: docker.elastic.co/beats/filebeat:$ELK_VERSION
      # 这里映射日志文件
      volumes:
        - type: bind
          source: ./filebeat/filebeat.yml
          target: /usr/share/filebeat/filebeat.yml
        - type: bind
          source: ./filebeat/applogsfields.yml
          target: /usr/share/filebeat/applogsfields.yml
        - type: bind
          source: ./Shanghai
          target: /etc/localtime
          read_only: true
      depends_on:
        - elasticsearch
        - kafka
      networks:
        - elk

  # logstash:
  #   build:
  #     context: logstash/
  #     args:
  #       ELK_VERSION: $ELK_VERSION
  #   volumes:
  #     - type: bind
  #       source: ./logstash/config/logstash.yml
  #       target: /usr/share/logstash/config/logstash.yml
  #       read_only: true
  #     - type: bind
  #       source: ./logstash/pipeline
  #       target: /usr/share/logstash/pipeline
  #       read_only: true
  #     - type: bind
  #       source: ./Shanghai
  #       target: /etc/localtime
  #       read_only: true
  #   ports:
  #     - "5044:5044"
  #     # - "5000:5000/tcp"
  #     # - "5000:5000/udp"
  #     - "9600:9600"
  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #   networks:
  #     - elk
  #   depends_on:
  #     - elasticsearch
  #     - kafka

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
      - type: bind
        source: ./Shanghai
        target: /etc/localtime
        read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:
  elk:
    driver: bridge
#
# volumes:
#   elasticsearch:
